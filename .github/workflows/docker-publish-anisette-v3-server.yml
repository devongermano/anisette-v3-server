# .github/workflows/docker-publish.yml
name: Publish anisette-v3-server Docker image

on:
  push:
    branches: [main]           # build every commit to main
  release:                     # build on GitHub “Create release” / semver tag
    types: [published]
  workflow_dispatch:           # allow manual trigger

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read           # needed for checkout + metadata action
      packages: write          # future-proofing; fine to keep

    steps:
      # 1. Checkout repo
      - uses: actions/checkout@v4

      # 2. Enable cross-arch emulation (needed for arm builds on x86 runner)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 3. Enable Buildx (buildx = multi-stage, multi-arch builder)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Derive tags & labels (latest, sha, semver) ------------------------
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: dadoum/anisette-v3-server
          # You can tweak these; common combo shown below
          tags: |
            type=raw,value=latest                 # always push :latest
            type=sha,format=short                 # :<8-char-sha>
            type=semver,pattern={{version}}       # :1.2.3 when pushing a v1.2.3 release
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}

      # 5. Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6. Build & push
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile              # change if your Dockerfile has a different path
          push: true
          # Multi-arch targets (trim if you don’t need all of them)
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Optional: caching to speed things up
          # cache-from: type=gha
          # cache-to:   type=gha,mode=max